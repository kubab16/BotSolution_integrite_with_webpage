// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.8");

            modelBuilder.Entity("Infrastructure.BadWord", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("BadIssue")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("BadWords");
                });

            modelBuilder.Entity("Infrastructure.Comands", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Funny")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Information")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Miusic")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Moderation")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Comands");
                });

            modelBuilder.Entity("Infrastructure.ConectionSeries", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("FirstSeries")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("SecondSeries")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("TypeConnecionFirst")
                        .HasColumnType("longtext");

                    b.Property<string>("TypeConnecionSecond")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("ConectionSeries");
                });

            modelBuilder.Entity("Infrastructure.Episode", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong>("SeriesId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Infrastructure.EpisodeComments", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<int>("Negative")
                        .HasColumnType("int");

                    b.Property<int>("Positive")
                        .HasColumnType("int");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("EpisodeComments");
                });

            modelBuilder.Entity("Infrastructure.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("File")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("Infrastructure.ModerationRole", b =>
                {
                    b.Property<ulong>("ModerationRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Avatar")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ban")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Configuration")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Funny")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("GuildID")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Information")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Kick")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Modration")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Ping")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("RoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("ServerCmd")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong?>("ServerGuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Tmute")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("User")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Vmute")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Warn")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("ModerationRoleId");

                    b.HasIndex("ServerGuildId");

                    b.ToTable("ModerationRoles");
                });

            modelBuilder.Entity("Infrastructure.PermisionGlobal", b =>
                {
                    b.Property<ulong>("PermisionGlobalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Admin")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Coments")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EditPlayer")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("EditSeries")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("Modelator")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("PermisionGlobalId");

                    b.ToTable("PermisionGlobals");
                });

            modelBuilder.Entity("Infrastructure.Player", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("EpisodeID")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Link")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("EpisodeID");

                    b.HasIndex("UserId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Infrastructure.Punishment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("Finished")
                        .HasColumnType("tinyint(1)");

                    b.Property<ulong>("GuidId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ModeratorId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Reason")
                        .HasColumnType("longtext");

                    b.Property<ulong?>("ServerGuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("TypeOfPunishment")
                        .HasColumnType("longtext");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("ServerGuildId");

                    b.ToTable("Punishment");
                });

            modelBuilder.Entity("Infrastructure.Series", b =>
                {
                    b.Property<ulong>("SeriesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("End")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("EpisodeLenght")
                        .HasColumnType("double");

                    b.Property<byte[]>("Image")
                        .HasColumnType("longblob");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Start")
                        .HasColumnType("datetime(6)");

                    b.HasKey("SeriesId");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("Infrastructure.SeriesComments", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Comment")
                        .HasColumnType("longtext");

                    b.Property<ulong?>("SeriesId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.HasIndex("UserId");

                    b.ToTable("SeriesComments");
                });

            modelBuilder.Entity("Infrastructure.SeriesRating", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<double>("Characters")
                        .HasColumnType("double");

                    b.Property<double>("Graphics")
                        .HasColumnType("double");

                    b.Property<double>("Music")
                        .HasColumnType("double");

                    b.Property<double>("Raiting")
                        .HasColumnType("double");

                    b.Property<ulong>("SeriesId")
                        .HasColumnType("bigint unsigned");

                    b.Property<double>("Story")
                        .HasColumnType("double");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.ToTable("SeriesRating");
                });

            modelBuilder.Entity("Infrastructure.SeriesTag", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned");

                    b.Property<int>("SeriesId")
                        .HasColumnType("int");

                    b.Property<ulong?>("SeriesId1")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("TagId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId1");

                    b.HasIndex("TagId");

                    b.ToTable("SeriesTags");
                });

            modelBuilder.Entity("Infrastructure.Server", b =>
                {
                    b.Property<ulong>("GuildId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("AutoRoleId")
                        .HasColumnType("bigint unsigned");

                    b.Property<byte[]>("Background")
                        .HasColumnType("longblob");

                    b.Property<string>("Banned")
                        .HasColumnType("longtext");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong?>("ComandsId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Goodbye")
                        .HasColumnType("longtext");

                    b.Property<int?>("LangueId")
                        .HasColumnType("int");

                    b.Property<ulong>("Logs")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Prefix")
                        .HasColumnType("longtext");

                    b.Property<ulong>("Tmute")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("Vmute")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Welcome")
                        .HasColumnType("longtext");

                    b.HasKey("GuildId");

                    b.HasIndex("ComandsId");

                    b.HasIndex("LangueId");

                    b.ToTable("Servers");
                });

            modelBuilder.Entity("Infrastructure.Tags", b =>
                {
                    b.Property<string>("TagId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Infrastructure.TrustUser", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("GuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("MessageCount")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("OddMessageCount")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ReactionCount")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("TrustValue")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.ToTable("TrustUsers");
                });

            modelBuilder.Entity("Infrastructure.User", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<bool>("Adult")
                        .HasColumnType("tinyint(1)");

                    b.Property<byte[]>("Avatar")
                        .HasColumnType("longblob");

                    b.Property<DateTime>("BrightDate")
                        .HasColumnType("datetime(6)");

                    b.Property<ulong>("DiscordAccountId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("Group")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("HashedPassord")
                        .HasColumnType("longtext");

                    b.Property<string>("Mail")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<ulong?>("PermisionGlobalId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("PermisionGlobalId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Infrastructure.WathedEpisode", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<ulong?>("SeriesId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("UserId")
                        .HasColumnType("bigint unsigned");

                    b.HasKey("Id");

                    b.HasIndex("SeriesId");

                    b.HasIndex("UserId");

                    b.ToTable("WathedEpisode");
                });

            modelBuilder.Entity("Infrastructure.Webhooks", b =>
                {
                    b.Property<ulong>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("ChannelId")
                        .HasColumnType("bigint unsigned");

                    b.Property<ulong>("IdServer")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.Property<ulong?>("ServerGuildId")
                        .HasColumnType("bigint unsigned");

                    b.Property<string>("Token")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("ServerGuildId");

                    b.ToTable("Webhooks");
                });

            modelBuilder.Entity("Infrastructure.Episode", b =>
                {
                    b.HasOne("Infrastructure.Series", "Series")
                        .WithMany("Episodes")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Infrastructure.EpisodeComments", b =>
                {
                    b.HasOne("Infrastructure.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Infrastructure.ModerationRole", b =>
                {
                    b.HasOne("Infrastructure.Server", "Server")
                        .WithMany("ModerationRoles")
                        .HasForeignKey("ServerGuildId");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Infrastructure.Player", b =>
                {
                    b.HasOne("Infrastructure.Episode", "Episodes")
                        .WithMany("players")
                        .HasForeignKey("EpisodeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastructure.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Episodes");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Infrastructure.Punishment", b =>
                {
                    b.HasOne("Infrastructure.Server", "Server")
                        .WithMany("Punishments")
                        .HasForeignKey("ServerGuildId");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Infrastructure.SeriesComments", b =>
                {
                    b.HasOne("Infrastructure.Series", null)
                        .WithMany("SeriesComments")
                        .HasForeignKey("SeriesId");

                    b.HasOne("Infrastructure.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Infrastructure.SeriesRating", b =>
                {
                    b.HasOne("Infrastructure.Series", "Series")
                        .WithMany("SeriesRatings")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");
                });

            modelBuilder.Entity("Infrastructure.SeriesTag", b =>
                {
                    b.HasOne("Infrastructure.Series", "Series")
                        .WithMany("Tags")
                        .HasForeignKey("SeriesId1");

                    b.HasOne("Infrastructure.Tags", "Tag")
                        .WithMany()
                        .HasForeignKey("TagId");

                    b.Navigation("Series");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("Infrastructure.Server", b =>
                {
                    b.HasOne("Infrastructure.Comands", "Comands")
                        .WithMany()
                        .HasForeignKey("ComandsId");

                    b.HasOne("Infrastructure.Language", "Langue")
                        .WithMany()
                        .HasForeignKey("LangueId");

                    b.Navigation("Comands");

                    b.Navigation("Langue");
                });

            modelBuilder.Entity("Infrastructure.User", b =>
                {
                    b.HasOne("Infrastructure.PermisionGlobal", "Permision")
                        .WithMany()
                        .HasForeignKey("PermisionGlobalId");

                    b.Navigation("Permision");
                });

            modelBuilder.Entity("Infrastructure.WathedEpisode", b =>
                {
                    b.HasOne("Infrastructure.Series", "Series")
                        .WithMany()
                        .HasForeignKey("SeriesId");

                    b.HasOne("Infrastructure.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Series");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Infrastructure.Webhooks", b =>
                {
                    b.HasOne("Infrastructure.Server", "Server")
                        .WithMany("Webhooks")
                        .HasForeignKey("ServerGuildId");

                    b.Navigation("Server");
                });

            modelBuilder.Entity("Infrastructure.Episode", b =>
                {
                    b.Navigation("players");
                });

            modelBuilder.Entity("Infrastructure.Series", b =>
                {
                    b.Navigation("Episodes");

                    b.Navigation("SeriesComments");

                    b.Navigation("SeriesRatings");

                    b.Navigation("Tags");
                });

            modelBuilder.Entity("Infrastructure.Server", b =>
                {
                    b.Navigation("ModerationRoles");

                    b.Navigation("Punishments");

                    b.Navigation("Webhooks");
                });
#pragma warning restore 612, 618
        }
    }
}
